col.var = "black",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21,
fill.ind = tpdata$Treatment,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Treatment,
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Treatment,
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Treatment,
addEllipses = TRUE,
col.var = "black",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Treatment,
addEllipses = TRUE,
label = "var",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
repel = TRUE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
repel = FALSE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
mean.point = FALSE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
col.ind = tpdata$Treatment,
mean.point = FALSE,
legend.title = "Treatment") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
col.ind = tpdata$Treatment,
mean.point = FALSE) +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
habillage = tpdata$Treatment,
mean.point = FALSE) +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
fill.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
habillage = tpdata$Treatment,
mean.point = FALSE) +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom = "point", pointshape = 21, pointsize = 2,
col.ind = tpdata$Group,
addEllipses = TRUE,
label = "var",
habillage = tpdata$Treatment,
mean.point = FALSE) +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(pdata.pr, aes(PC1, PC2, color=Group, shape=Treatment)) +
geom_point(size=4, alpha=0.85) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
theme_minimal()
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(pdata.pr, aes(PC1, PC2, color=Group, shape=Treatment)) +
geom_point(size=4, alpha=0.85) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
theme_minimal()
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
palette = "jco",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Treatment,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Treatment,
col.ind = "black",
addEllipses = FALSE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = FALSE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Treatment,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Day,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
ellipse.level = 0.95,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
ellipse.level = 0.95,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
ellipse.level = 0.5,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
ellipse.level = 0.99,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Group,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
ellipse.level = 0.9,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
fviz_pca_ind(pdata.pr, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = tpdata$Day,
col.ind = "black",
addEllipses = TRUE,
label = "var",
col.var = "black",
mean.point = FALSE,
ellipse.level = 0.95,
repel = TRUE,
legend.title = "Group") +
ggtitle("2D PCA-plot from 30 feature dataset") +
theme(plot.title = element_text(hjust = 0.5))
#-----------------------------------------------
#analysing data for CW vs HD
#Harvest
harvest <- read.csv(file="harvest_data.csv", header=TRUE)
get_stats <- function(cols, treatment){
result = "messed_up"
harvest_green <- harvest[,c("Family", "Group","Treatment", cols )]
harvest_green_10 <-  harvest_green[grep(treatment, harvest_green$Treatment), ]
colnames(harvest_green_10) <- c("Family","Group", "Treatment", "Temp")
ave_harv <- harvest_green_10 %>%
group_by(Family, Group) %>%
summarise(average = mean(Temp))
attach(ave_harv)
b=bartlett.test(average ~ interaction(Group))[3] # for heterogenous varience
s = shapiro.test(resid(aov(average ~ Group)))[2] # for normal distribution
if (b > 0.05 & s > 0.05){
#print("PASSED_parametric")
p = summary(aov(average~Group, data = ave_harv))[[1]][["Pr(>F)"]][1]
if (p < 0.05){
#print("Significant")
p = as.character(p)
result <- c("significant", p)
} else {
p = as.character(p)
result <- c("not", p)
}
#print(p)
} else {
k = kruskal.test(average ~ Group, data = ave_harv)
#print(k[3])
if (k[3] < 0.05){
p = as.character(k[3])
result <- c("significant, k", p)
} else {
p = as.character(k[3])
result <- c("not", p)
}
}
boxplot(average ~ Group,
data = ave_harv,
xlab = "Source",
ylab = cols,
add = TRUE)
detach(ave_harv)
return(result)
}
get_stats("needle_weight", "drought/heat_0")
get_stats <- function(cols, treatment){
result = "messed_up"
harvest_green <- harvest[,c("Family", "Group","Treatment", cols )]
harvest_green_10 <-  harvest_green[grep(treatment, harvest_green$Treatment), ]
colnames(harvest_green_10) <- c("Family","Group", "Treatment", "Temp")
ave_harv <- harvest_green_10 %>%
group_by(Family, Group) %>%
summarise(average = mean(Temp))
attach(ave_harv)
b=bartlett.test(average ~ interaction(Group))[3] # for heterogenous varience
s = shapiro.test(resid(aov(average ~ Group)))[2] # for normal distribution
if (b > 0.05 & s > 0.05){
#print("PASSED_parametric")
p = summary(aov(average~Group, data = ave_harv))[[1]][["Pr(>F)"]][1]
if (p < 0.05){
#print("Significant")
p = as.character(p)
result <- c("significant", p)
} else {
p = as.character(p)
result <- c("not", p)
}
#print(p)
} else {
k = kruskal.test(average ~ Group, data = ave_harv)
#print(k[3])
if (k[3] < 0.05){
p = as.character(k[3])
result <- c("significant, k", p)
} else {
p = as.character(k[3])
result <- c("not", p)
}
}
boxplot(average ~ Group,
data = ave_harv,
xlab = "Source",
ylab = cols)
detach(ave_harv)
return(result)
}
get_stats("needle_wt", "drought/heat_0")
get_stats("needle_wt", "drought/heat_5")
get_stats <- function(cols, treatment){
result = "messed_up"
harvest_green <- harvest[,c("Family", "Group","Treatment", cols )]
harvest_green_10 <-  harvest_green[grep(treatment, harvest_green$Treatment), ]
colnames(harvest_green_10) <- c("Family","Group", "Treatment", "Temp")
ave_harv <- harvest_green_10 %>%
group_by(Family, Group) %>%
summarise(average = mean(Temp))
attach(ave_harv)
b=bartlett.test(average ~ interaction(Group))[3] # for heterogenous varience
s = shapiro.test(resid(aov(average ~ Group)))[2] # for normal distribution
if (b > 0.05 & s > 0.05){
#print("PASSED_parametric")
p = summary(aov(average~Group, data = ave_harv))[[1]][["Pr(>F)"]][1]
if (p < 0.05){
#print("Significant")
p = as.character(p)
result <- c("significant", p)
} else {
p = as.character(p)
result <- c("not", p)
}
#print(p)
} else {
k = kruskal.test(average ~ Group, data = ave_harv)
#print(k[3])
if (k[3] < 0.05){
p = as.character(k[3])
result <- c("significant, k", p)
} else {
p = as.character(k[3])
result <- c("not", p)
}
}
boxplot(average ~ Group,
data = ave_harv,
xlab = "Source",
ylab = cols,
add = TRUE)
detach(ave_harv)
return(ave_harv)
}
get_stats("needle_wt", "drought/heat_5")
a=get_stats("needle_wt", "drought/heat_5")
View(a)
boxplot(a)
boxplot(a, average~Group)
boxplot(average~Group, a)
b=get_stats("needle_wt", "drought/heat_10")
boxplot(average~Group, b, add=TRUE)
attach(mtcars)
par(mfrow=c(2,2))
boxplot(average~Group, a)
attach(mtcars)
par(mfrow=c(2,3))
boxplot(average~Group, a)
a=get_stats("needle_wt", "drought/heat_0")
b=get_stats("needle_wt", "drought/heat_5")
c=get_stats("needle_wt", "drought/heat_10")
d=get_stats("needle_wt", "heat_0")
e=get_stats("needle_wt", "heat_5")
f=get_stats("needle_wt", "heat_10")
attach(mtcars)
par(mfrow=c(3,2))
history
history()
hist(
hist()
hist
history()
boxplot(average~Group, a)
attach(mtcars)
par(mfrow=c(2,3))
boxplot(average~Group, a)
boxplot(average~Group, b)
boxplot(average~Group, c)
boxplot(average~Group, d)
boxplot(average~Group, e)
boxplot(average~Group, f)
attach(mtcars)
par(mfrow=c(2,3))
boxplot(average~Group, a, ylab="drought/heat_0")
attach(mtcars)
par(mfrow=c(2,3))
boxplot(average~Group, a, xlab="drought/heat_0")
attach(mtcars)
par(mfrow=c(2,3))
boxplot(average~Group, a, xlab="Drought/heat 0")
boxplot(average~Group, b, xlab="Drought/heat 5")
boxplot(average~Group, c, xlab="Drought/heat 10")
boxplot(average~Group, d, xlab="Heat 0")
boxplot(average~Group, e, xlab="Heat 5")
boxplot(average~Group, f, xlab="Heat 10")
g=get_stats("needle_wt", "control_0")
h=get_stats("needle_wt", "control_5")
i=get_stats("needle_wt", "control_10")
attach(mtcars)
par(mfrow=c(3,3))
boxplot(average~Group, a, xlab="Drought/heat 0")
boxplot(average~Group, b, xlab="Drought/heat 5")
boxplot(average~Group, c, xlab="Drought/heat 10")
boxplot(average~Group, d, xlab="Heat 0")
boxplot(average~Group, e, xlab="Heat 5")
boxplot(average~Group, f, xlab="Heat 10")
boxplot(average~Group, g, xlab="Control 0")
boxplot(average~Group, h, xlab="Control 5")
boxplot(average~Group, i, xlab="Control 10")
